#!/bin/bash

# lab4-check-5

# Author:  Murray Saul
# Date:    February 17, 2021
# Modified By: Jason Carman
# Modified: September 18, 2024
#
# Purpose: Verify that user created a shell script "hello" exists in
#          their home directory and has execute permissions
#          

logfile=$(getent passwd ${SUDO_USER:-$USER} | cut -d: -f6)/Documents/lab4-check-5_output.txt

# Function to indicate OK (in green) if check is true; otherwise, indicate
# WARNING (in red) if check is false and end with false exit status

function check(){

  if eval $1; then
     echo -e "\e[0;32mOK\e[m"
  else
     echo -e "\e[0;31mWARNING\e[m"
     echo 
     printf "$2"
     echo
     exit 1
  fi

} # end of check() function

# Set shell shell history
HISTFILE=~/.bash_history
set -o history

clear  # Clear the screen

# Make certain user is in the home directory

if [ $PWD != $HOME ]; then
   echo -e "\033[1mERROR:\033[0m"
   echo
   echo "You are NOT located in your HOME directory."
   echo -e "(i.e. \033[1m$HOME\033[0m )"
   echo
   echo -en "Issue the \033[1mcd\033[0m command (without arguments)"
   echo -e "and confirm that you are"
   echo -e "currently located in your home directory with the \033[1mpwd\033[0m command,"
   echo "and re-run this checking script."
   echo
   echo

   exit 1
fi

# System information gathering
echo "OSL645 Lab 4 Check 5 Script" > $logfile

# Add a unique identifier to the logfile
read -p "Please enter your Seneca ID (ie jmcarman): " user
echo "Unique Identifer: $(echo $user | sha256sum)" | tee -a $logfile
echo "------------------------------------" | tee -a $logfile

# Start checking lab
echo | tee -a $logfile
echo "CHECKING YOUR LAB 4 WORK:" | tee -a $logfile

echo -e "\033[1mCHECKING YOUR WORK:\033[0m"
echo

# Check "hello" shell script was created in home directory
echo -n "Checking \"hello\" shell script file has been created in your home directory: " | tee -a $logfile
check "test -f $HOME/hello" "The file pathname \"$HOME/hello\" does NOT exist. Check if you mispelled file name, or used uppercase letters by mistake. Create the shell script file \"hello\" in your home directory and re-run this checking script\n" | tee -a $logfile

# Check "hello" shell script (in your home directory) has execute permissions
echo -n "Checking \"hello\" shell script file has execute permissions: " | tee -a $logfile
check "test -x $HOME/hello" "The shell script pathname \"$HOME/hello\" does NOT have execute permissions. Add execute permissions for the owner (user) of the \"hello\" shell script file in your home directory and re-run this checking script\n" | tee -a $logfile

# Create the temporary BENCHMARK output file of hello.bash for comparison purposes
# Notice that the "Here Document" is used to create this file with redirection 

cat > /tmp/compare.$$ <<+

Hello $USER

+

# Run student's shell script and store stdout to a temp file

$HOME/hello > /tmp/student.$$

# Check student's "hello.bash" shell script has CORRECT output
# Notice that "diff" command is used to compare your shell script's output
# with CORRECT required output (i.e. comparison file)
# Notice command's output and error thrown out to "/dev/null" since
# we are only interested in TRUE or FALSE.

echo -n "Checking your \"hello.bash\" shell script file produces CORRECT required output: " | tee -a $logfile
check "diff /tmp/student.$$ /tmp/compare.$$ > /dev/null 2> /dev/null" "The OUTPUT when running your Bash shell script does NOT match\nthe required specifications provided from your tutorial instructions.\n\n\e[3;4;33mYOUR SHELL SCRIPT OUTPUT (including empty lines)\e[0m\n$(cat /tmp/student.$$)\n\n\e[3;4;33mCORRECT SHELL SCRIPT OUTPUT (including empty lines)\e[0m\n$(cat /tmp/compare.$$)\n\nCAREFULLY look for differences, then make corrections to your Bash shell script\nto match CORRECT OUTPUT, save editing changes, run your script to confirm,\nand then re-run this checking script.\n\nGET USED TO THIS, SINCE THIS IS WHAT YOUR ASSIGNMENT 3\nPROGRAM WILL DO TO CHECK FOR CORRECT OUTPUT!\n\n" | tee -a $logfile

rm /tmp/student.$$ 2> /dev/null

warningcount=$(grep -c "WARNING" $logfile)

echo | tee -a $logfile
echo | tee -a $logfile

if [ $warningcount == 0 ]; then
  echo "Congratulations!" | tee -a $logfile
  echo | tee -a $logfile
  echo "You have successfully completed Lab 4 - Check 5." | tee -a $logfile
  echo "1. Show the output of this script to your OSL645 professor." | tee -a $logfile
  echo "2. A copy of this script output has been created at $logfile." | tee -a $logfile
  echo
else
  echo "Your Lab is not complete." | tee -a $logfile
  echo "Correct the warnings listed above, then run this script again." | tee -a $logfile
fi